server:
  port: 8080

spring:
  application:
    name: main
  mvc:
    throw-exception-if-no-handler-found: ${IS_EXCEPTION_HANDLER:""}
    pathmatch:
      matching-strategy: "ant_path_matcher"
  web:
    resources:
      add-mappings: ${IS_MAPPING:""}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:""}
            client-secret: ${GOOGLE_CLIENT_SECRET:""}
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://www.googleapis.com/oauth2/v4/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SPRING_MAIL_USERNAME:""}
    password: ${SPRING_MAIL_PASSWORD:""}
    properties:
      mail:
        smtp:
          ssl:
            trust: smtp.gmail.com
          auth: true
          timeout: 5000
          starttls:
            enable: true

  datasource:
    driver-class-name: ${SPRING_DATASOURCE_DRIVER:""}
    url: ${SPRING_DATASOURCE_URL:""}
    username: ${SPRING_DATASOURCE_USERNAME:""}
    password: ${SPRING_DATASOURCE_PASSWORD:""}

  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:""}
    show-sql: ${SPRING_JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: ${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:""}
    database-platform: ${SPRING_JPA_DATABASE_PLATFORM:""}
    open-in-view: ${SPRING_JPA_OPEN_IN_VIEW:false}
    defer-datasource-initialization: ${JPA_INIT_DATE:true}

  jwt:
    secret: ${SPRING_JWT_SECRET:""}
  sql:
    init:
      mode: ${SPRING_SQL_INIT_MODE:""}
      schema-locations: ${SQL_SHEMA:""}
      data-locations: ${SQL_DATA:""}
app:
  cors:
    enabled: ${APP_CORS_ENABLED:""}
  jwt:
    access-token:
      expiration: ${APP_JWT_ACCESS_TOKEN_EXPIRATION:900000}
    refresh-token:
      expiration: ${APP_JWT_REFRESH_TOKEN_EXPIRATION:12096000}
  sql:
    filepath: ${APP_FILEPATH:""}
    local: ${APP_IS_LOCAL:true}
naver:
  api:
    base-url: https://openapi.naver.com/v1/search/local.json
    client-id: ${NAVER_CLIENT_ID:""}
    client-secret: ${NAVER_CLIENT_SECRET:""}

business:
  api:
    base-url: ${BUSINESS_BASE_URL:""}
    secret-key: ${BUSINESS_SECRETKEY:""}
